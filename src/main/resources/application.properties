spring.application.name=spring-cloud-customer
server.port=18280
# 修改显示的微服务名为：应用名称:端口
eureka.instance.instance-id=${spring.application.name}:${server.port}
# 心跳时间，即服务续约间隔时间（缺省为30s）
eureka.instance.lease-renewal-interval-in-seconds=5
#表示eureka client间隔多久去拉取服务注册信息，默认为30秒
eureka.client.registry-fetch-interval-seconds=5
# 发呆时间，即服务续约到期时间（缺省为90s）
eureka.instance.lease-expiration-duration-in-seconds=15
# 开启健康检查（依赖spring-boot-starter-actuator）
eureka.client.healthcheck.enabled=true
eureka.client.serviceUrl.defaultZone=http://localhost:18081/eureka/,http://127.0.0.1:18080/eureka/
#启用断路器
feign.hystrix.enabled=true

#ribbon负载均衡策略配置，默认是依次轮询
#SPRING-CLOUD-PRODUCER.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

#Hystrix是否启用熔断功能，即超时断开
hystrix.command.default.execution.timeout.enabled=true;
#Hystrix断路器的超时时间，默认是1s
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
#设置logback的配置文件路径
logging.config=classpath:logback-spring.xml
logging.path=e:/springcloud/logs/${spring.application.name}-${server.port}/

#该参数用来开启重试机制
spring.cloud.loadbalancer.retry.enabled=true
# 设置连接超时时间
ribbon.ConnectTimeout=250
# 设置读取超时时间
ribbon.ReadTimeout=1000
# 对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations=true
# 切换实例的重试次数
ribbon.MaxAutoRetriesNextServer=1
# 对当前实例的重试次数
ribbon.MaxAutoRetries=2

# 设置针对hello-service服务的连接超时时间
#hello-service.ribbon.ConnectTimeout=600
# 设置针对hello-service服务的读取超时时间
#hello-service.ribbon.ReadTimeout=6000
# 设置针对hello-service服务所有操作请求都进行重试
#hello-service.ribbon.OkToRetryOnAllOperations=true
# 设置针对hello-service服务切换实例的重试次数
#hello-service.ribbon.MaxAutoRetriesNextServer=2
# 设置针对hello-service服务的当前实例的重试次数
#hello-service.ribbon.MaxAutoRetries=1

# 配置请求GZIP压缩
#feign.compression.request.enabled=true
# 配置响应GZIP压缩
#feign.compression.response.enabled=true
# 配置压缩支持的MIME TYPE
#feign.compression.request.mime-types=text/xml,application/xml,application/json
# 配置压缩数据大小的下限
#feign.compression.request.min-request-size=2048

# 开启日志 格式为logging.level.+Feign客户端路径
logging.level.com.mtl.remote.*=DEBUG

#启用shutdown
endpoints.shutdown.enabled=true
#禁用密码验证
endpoints.shutdown.sensitive=false